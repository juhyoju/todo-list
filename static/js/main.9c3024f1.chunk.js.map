{"version":3,"sources":["components/TodoInput/useTodoInput.js","components/TodoInput/TodoInputStyle.js","components/TodoInput/TodoInput.js","components/TodoItem/TodoItemStyle.js","components/TodoItem/useTodoItem.js","components/TodoItem/TodoItem.js","components/TodoList/TodoListStyle.js","components/TodoList/useTodoList.js","components/TodoList/TodoList.js","components/DateString/useDateString.js","components/DateString/DateStringStyle.js","components/DateString/DateString.js","theme/ThemeToggle.js","theme/theme.js","theme/themeProvider.js","components/TodoTemplate.js","App.js","index.js"],"names":["useTodoInput","todos","setTodos","useState","newTodo","setNewTodo","onAddTodo","todoAll","todo","id","Date","now","isDone","window","localStorage","setItem","JSON","stringify","onSaveTodo","alert","onChange","event","target","value","onKeyPress","key","TodoInputWrap","styled","div","TodoInputBox","input","TodoSaveButton","button","TodoInput","type","placeholder","onClick","icon","faPlusCircle","TodoList","li","props","theme","borderColor","todoBg","TodoText","p","textColor","TodoEditInput","TodoAction","useTodoItem","editTodo","setEditTodo","newText","setNewText","editInputRef","useRef","useEffect","current","focus","onIsDoneItem","onIsDoneTodo","map","onDeleteTodoItem","confirm","onDeleteTodos","filter","onEditTodo","onChangeEditInput","onClickSubmitButton","nextTodoList","TodoItem","mode","checked","ref","faCheck","style","color","faEdit","faTimes","TodoTitle","TodoNull","TodoAllDeleteButton","useTodoList","checkedList","onTodoNumber","length","onDeleteAll","title","className","faTrashAlt","useDateString","Today","DateString","toLocaleDateString","month","day","DateName","weekday","DateNameStyle","h2","ThemeToggle","toggle","ToggleWrapper","bgColor","lightTheme","darkTheme","ThemeContext","createContext","ThemeProvider","children","LocalTheme","getItem","ThemeMode","setThemeMode","themeObject","Provider","TodoTemplate","onGetTodo","parse","context","useContext","toggleTheme","useCallback","useTheme","TodoWrap","width","maxWidth","marginBottom","TodoFooter","getFullYear","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c3024f1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst useTodoInput = (todos, setTodos) => {\r\n    const [newTodo, setNewTodo] = useState('')\r\n\r\n    const onChange = event => {\r\n        setNewTodo(event.target.value)\r\n    }\r\n\r\n    const onKeyPress = event => {\r\n        if (event.key === 'Enter') {\r\n            onAddTodo()\r\n        }\r\n    }\r\n\r\n    const onSaveTodo = newTodo => {\r\n        window.localStorage.setItem('todoArray', JSON.stringify(newTodo))\r\n    }\r\n\r\n    const onAddTodo = () => {\r\n        if (newTodo === '') {\r\n            alert('⚠ 내용을 입력하세요.')\r\n            return\r\n        }\r\n        const todoAll = [\r\n            ...todos,\r\n            { todo: newTodo, id: Date.now(), isDone: false }\r\n        ]\r\n        setTodos(todoAll)\r\n        setNewTodo('')\r\n        onSaveTodo(todoAll)\r\n    }\r\n\r\n    return { onChange, onKeyPress, onAddTodo, newTodo }\r\n}\r\n\r\nexport default useTodoInput\r\n","import styled from 'styled-components'\r\n\r\nexport const TodoInputWrap = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 25px 0;\r\n`\r\n\r\nexport const TodoInputBox = styled.input`\r\n    color: #e6b74a;\r\n    padding: 5px 10px;\r\n    height: 50px;\r\n    width: calc(100% - 50px);\r\n    background: transparent;\r\n    border-bottom: 1px solid #e6b74a;\r\n    font-size: 17px;\r\n`\r\n\r\nexport const TodoSaveButton = styled.button`\r\n    font-size: 21px;\r\n    width: 50px;\r\n    color: #e6b74a;\r\n`\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport useTodoInput from './useTodoInput'\r\nimport { TodoInputWrap, TodoInputBox, TodoSaveButton } from './TodoInputStyle'\r\n\r\nconst TodoInput = ({ setTodos, todos }) => {\r\n    const { onChange, onAddTodo, onKeyPress, newTodo } = useTodoInput(\r\n        todos,\r\n        setTodos\r\n    )\r\n    return (\r\n        <>\r\n            <TodoInputWrap>\r\n                <TodoInputBox\r\n                    type='text'\r\n                    value={newTodo}\r\n                    onChange={onChange}\r\n                    placeholder='오늘의 할 일을 입력하세요'\r\n                    onKeyPress={onKeyPress}\r\n                />\r\n                <TodoSaveButton onClick={onAddTodo}>\r\n                    <FontAwesomeIcon icon={faPlusCircle} />\r\n                </TodoSaveButton>\r\n            </TodoInputWrap>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoInput\r\n","import styled from 'styled-components'\r\n\r\nexport const TodoList = styled.li`\r\n    border: 1px solid ${props => props.theme.borderColor};\r\n    padding: 25px;\r\n    margin-bottom: 15px;\r\n    background: ${({ theme }) => theme.todoBg};\r\n    opacity: ${props => (props.isDone ? '0.4' : '1')};\r\n    display: flex;\r\n`\r\n\r\nexport const TodoText = styled.p`\r\n    flex: 2 1 0%;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    text-decoration: ${props => (props.isDone ? 'line-through' : 'normal')};\r\n    color: ${({ theme }) => theme.textColor};\r\n`\r\nexport const TodoEditInput = styled.input`\r\n    flex: 2 1 0%;\r\n    background: transparent;\r\n    font-size: 17px;\r\n    font-family: 'NanumSquareRound', 'Noto Sans', 'Noto Sans CJK KR', sans-serif;\r\n    color: ${({ theme }) => theme.textColor};\r\n    border-bottom: 1px solid ${props => props.theme.borderColor};\r\n`\r\nexport const TodoAction = styled.button`\r\n    color: ${({ theme }) => theme.textColor};\r\n`\r\n","import React, { useEffect, useRef, useState } from 'react'\r\n\r\nconst useTodoItem = (todos, setTodos, todo) => {\r\n    const [editTodo, setEditTodo] = useState(false)\r\n    const [newText, setNewText] = useState(todo)\r\n\r\n    const onEditTodo = () => {\r\n        setEditTodo(true)\r\n    }\r\n\r\n    const onChangeEditInput = event => {\r\n        setNewText(event.target.value)\r\n    }\r\n\r\n    const onClickSubmitButton = id => {\r\n        const nextTodoList = todos.map(todos =>\r\n            todos.id === id ? { ...todos, todo: newText } : todos\r\n        )\r\n        setTodos(nextTodoList)\r\n        window.localStorage.setItem('todoArray', JSON.stringify(nextTodoList))\r\n        setEditTodo(false)\r\n    }\r\n\r\n    const onIsDoneItem = id => {\r\n        const onIsDoneTodo = todos.map(todos =>\r\n            todos.id === id ? { ...todos, isDone: !todos.isDone } : todos\r\n        )\r\n        setTodos(onIsDoneTodo)\r\n        window.localStorage.setItem('todoArray', JSON.stringify(onIsDoneTodo))\r\n    }\r\n\r\n    const onDeleteTodoItem = id => {\r\n        const deleteMsg = window.confirm('이 항목을 삭제하십니까?')\r\n\r\n        if (deleteMsg) {\r\n            const onDeleteTodos = todos.filter(todos => todos.id !== id)\r\n            setTodos(onDeleteTodos)\r\n            window.localStorage.setItem(\r\n                'todoArray',\r\n                JSON.stringify(onDeleteTodos)\r\n            )\r\n        }\r\n    }\r\n\r\n    const editInputRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        if (editTodo) {\r\n            editInputRef.current.focus()\r\n        }\r\n    }, [editTodo])\r\n\r\n    return {\r\n        onIsDoneItem,\r\n        onDeleteTodoItem,\r\n        onEditTodo,\r\n        editTodo,\r\n        onChangeEditInput,\r\n        onClickSubmitButton,\r\n        newText,\r\n        editInputRef\r\n    }\r\n}\r\nexport default useTodoItem\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faEdit, faCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport { TodoList, TodoText, TodoAction, TodoEditInput } from './TodoItemStyle'\r\n\r\nimport useTodoItem from './useTodoItem'\r\n\r\nconst TodoItem = ({ todo: { id, todo, isDone }, setTodos, todos, mode }) => {\r\n    const {\r\n        onIsDoneItem,\r\n        onDeleteTodoItem,\r\n        onEditTodo,\r\n        editTodo,\r\n        onChangeEditInput,\r\n        onClickSubmitButton,\r\n        newText,\r\n        editInputRef\r\n    } = useTodoItem(todos, setTodos, todo)\r\n\r\n    return (\r\n        <TodoList isDone={isDone}>\r\n            <input\r\n                type='checkbox'\r\n                checked={isDone}\r\n                onChange={() => onIsDoneItem(id)}\r\n            />\r\n            {editTodo ? (\r\n                <TodoEditInput\r\n                    type='text'\r\n                    value={newText}\r\n                    onChange={onChangeEditInput}\r\n                    mode={mode}\r\n                    //autoFocus='autoFocus'\r\n                    ref={editInputRef}\r\n                />\r\n            ) : (\r\n                <TodoText isDone={isDone}>{todo}</TodoText>\r\n            )}\r\n\r\n            <span>\r\n                {!isDone ? (\r\n                    editTodo ? (\r\n                        <TodoAction onClick={() => onClickSubmitButton(id)}>\r\n                            <FontAwesomeIcon\r\n                                icon={faCheck}\r\n                                style={{ color: '#e64a58' }}\r\n                            />\r\n                        </TodoAction>\r\n                    ) : (\r\n                        <TodoAction onClick={onEditTodo}>\r\n                            <FontAwesomeIcon icon={faEdit} />\r\n                        </TodoAction>\r\n                    )\r\n                ) : null}\r\n                <TodoAction onClick={() => onDeleteTodoItem(id)}>\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                </TodoAction>\r\n            </span>\r\n        </TodoList>\r\n    )\r\n}\r\nexport default TodoItem\r\n","import styled from 'styled-components'\r\n\r\nexport const TodoTitle = styled.p`\r\n    margin: 50px 0 15px;\r\n    font-weight: bold;\r\n    opacity: ${props => (props.isDone ? '0.6' : '1')};\r\n    color: ${({ theme }) => theme.textColor};\r\n`\r\n\r\nexport const TodoNull = styled.div`\r\n    color: ${props => (props.mode === 'dark' ? '#666' : '#aaa')};\r\n    font-size: 14px;\r\n    padding: 10px;\r\n`\r\n\r\nexport const TodoAllDeleteButton = styled.button`\r\n    color: ${({ theme }) => theme.textColor};\r\n    font-size: 14px;\r\n`\r\n","import React from 'react'\r\n\r\nconst useTodoList = (todos, checkedList, setTodos) => {\r\n    const onTodoNumber = todos.filter(\r\n        todos => todos.isDone === checkedList\r\n    ).length\r\n\r\n    const onDeleteAll = () => {\r\n        const deleteMsg = window.confirm('해당 항목의 리스트를 모두 삭제합니다')\r\n\r\n        if (deleteMsg) {\r\n            const onDeleteTodos = todos.filter(\r\n                todos => todos.isDone !== checkedList\r\n            )\r\n            setTodos(onDeleteTodos)\r\n            window.localStorage.setItem(\r\n                'todoArray',\r\n                JSON.stringify(onDeleteTodos)\r\n            )\r\n        }\r\n    }\r\n\r\n    return { onTodoNumber, onDeleteAll }\r\n}\r\n\r\nexport default useTodoList\r\n","import React from 'react'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport TodoItem from '../TodoItem/TodoItem'\r\nimport { TodoTitle, TodoNull, TodoAllDeleteButton } from './TodoListStyle'\r\nimport useTodoList from './useTodoList'\r\n\r\nconst TodoList = ({ todos, setTodos, title, checkedList, mode }) => {\r\n    const { onTodoNumber, onDeleteAll } = useTodoList(\r\n        todos,\r\n        checkedList,\r\n        setTodos\r\n    )\r\n    return (\r\n        <div className='todoList'>\r\n            <TodoTitle isDone={checkedList}>\r\n                {title}\r\n                {onTodoNumber === 0 ? null : (\r\n                    <TodoAllDeleteButton\r\n                        onClick={onDeleteAll}\r\n                        title='삭제'\r\n                        isDone={checkedList}\r\n                    >\r\n                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                    </TodoAllDeleteButton>\r\n                )}\r\n            </TodoTitle>\r\n\r\n            {onTodoNumber === 0 ? (\r\n                checkedList === true ? (\r\n                    <TodoNull mode={mode}>{title}이 아직 없어요 😣</TodoNull>\r\n                ) : (\r\n                    <TodoNull mode={mode}>{title}을 모두 끝냈어요 😋</TodoNull>\r\n                )\r\n            ) : (\r\n                <ul>\r\n                    {todos.map(todo => {\r\n                        if (checkedList !== todo.isDone) return null\r\n                        return (\r\n                            <TodoItem\r\n                                todos={todos}\r\n                                todo={todo}\r\n                                key={todos.id}\r\n                                setTodos={setTodos}\r\n                            />\r\n                        )\r\n                    })}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react'\r\n\r\nconst useDateString = () => {\r\n    const Today = new Date()\r\n    const DateString = Today.toLocaleDateString('en-US', {\r\n        month: 'short',\r\n        day: 'numeric'\r\n    })\r\n    const DateName = Today.toLocaleDateString('en-US', {\r\n        weekday: 'long'\r\n    })\r\n\r\n    return { DateString, DateName }\r\n}\r\n\r\nexport default useDateString\r\n","import styled from 'styled-components'\r\n\r\nexport const DateNameStyle = styled.h2`\r\n    text-align: center;\r\n\r\n    & span {\r\n        font-size: 0.7em;\r\n        font-weight: 300;\r\n        color: #e6b74a;\r\n        display: block;\r\n    }\r\n`\r\n","import React from 'react'\r\nimport useDateString from './useDateString'\r\nimport { DateNameStyle } from './DateStringStyle'\r\n\r\nconst DateString = () => {\r\n    const { DateString, DateName } = useDateString()\r\n    return (\r\n        <DateNameStyle>\r\n            {DateString}\r\n            <span>{DateName}</span>\r\n        </DateNameStyle>\r\n    )\r\n}\r\n\r\nexport default DateString\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nfunction ThemeToggle({ toggle, mode }) {\r\n    return (\r\n        <ToggleWrapper onClick={toggle} mode={mode}>\r\n            {mode === 'dark' ? '🌚' : '🌝'}\r\n        </ToggleWrapper>\r\n    )\r\n}\r\n\r\nexport default ThemeToggle\r\n\r\nconst ToggleWrapper = styled.button`\r\n    position: fixed;\r\n    z-index: 999999;\r\n    bottom: 4%;\r\n    right: 3%;\r\n\r\n    background-color: ${props => props.theme.bgColor};\r\n    border-color: ${props => props.theme.borderColor};\r\n    border-style: solid;\r\n    border-width: 1px;\r\n    font-size: 20px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 96px;\r\n    height: 48px;\r\n    border-radius: 30px;\r\n    box-shadow: ${props =>\r\n        props.mode === 'dark'\r\n            ? '0px 5px 10px rgba(40, 40, 40, 1), 0px 2px 4px rgba(40, 40, 40, 1)'\r\n            : '0 5px 10px rgba(100, 100, 100, 0.15), 0 2px 4px rgba(100, 100, 100, 0.15)'};\r\n`\r\n","export const lightTheme = {\r\n    bgColor: '#F8F7F4',\r\n    textColor: '#31302E',\r\n    borderColor: '#eaeaea',\r\n    todoBg: '#fff'\r\n}\r\n\r\nexport const darkTheme = {\r\n    bgColor: '#1E1E22',\r\n    textColor: '#ccc',\r\n    borderColor: '#6b6b6b',\r\n    todoBg: '#444'\r\n}\r\n\r\nexport const theme = {\r\n    lightTheme,\r\n    darkTheme\r\n}\r\n","import React, { createContext, useState, useContext, useCallback } from 'react'\r\nimport { lightTheme, darkTheme } from '../theme/theme'\r\nimport { ThemeProvider as StyledProvider } from 'styled-components'\r\n\r\nconst ThemeContext = createContext({})\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n    const LocalTheme = window.localStorage.getItem('theme') || 'light'\r\n    const [ThemeMode, setThemeMode] = useState(LocalTheme)\r\n    const themeObject = ThemeMode === 'light' ? lightTheme : darkTheme\r\n\r\n    return (\r\n        <ThemeContext.Provider value={{ ThemeMode, setThemeMode }}>\r\n            <StyledProvider theme={themeObject}>{children}</StyledProvider>\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n\r\nfunction useTheme() {\r\n    const context = useContext(ThemeContext)\r\n    const { ThemeMode, setThemeMode } = context\r\n\r\n    const toggleTheme = useCallback(() => {\r\n        if (ThemeMode === 'light') {\r\n            setThemeMode('dark')\r\n            window.localStorage.setItem('theme', 'dark')\r\n        } else {\r\n            setThemeMode('light')\r\n            window.localStorage.setItem('theme', 'light')\r\n        }\r\n    }, [ThemeMode, setThemeMode])\r\n\r\n    return [ThemeMode, toggleTheme]\r\n}\r\n\r\nexport { ThemeProvider, useTheme }\r\n\r\nexport default ThemeProvider\r\n","import React, { useState } from 'react'\r\nimport TodoInput from './TodoInput/TodoInput'\r\nimport TodoList from './TodoList/TodoList'\r\nimport DateString from './DateString/DateString'\r\nimport ThemeToggle from 'theme/ThemeToggle'\r\nimport { useTheme } from 'theme/themeProvider'\r\nimport styled from 'styled-components'\r\n\r\nconst TodoTemplate = id => {\r\n    // 가져오기\r\n    const onGetTodo = window.localStorage.getItem('todoArray')\r\n    const [todos, setTodos] = useState(JSON.parse(onGetTodo) ?? [])\r\n\r\n    const [ThemeMode, toggleTheme] = useTheme()\r\n\r\n    return (\r\n        <TodoWrap>\r\n            <div style={{ width: '100%', maxWidth: '1000px' }}>\r\n                <header>\r\n                    <DateString />\r\n                </header>\r\n\r\n                <article style={{ marginBottom: '50px' }}>\r\n                    <TodoInput todos={todos} setTodos={setTodos} />\r\n\r\n                    <TodoList\r\n                        title={'해야할 일'}\r\n                        todos={todos}\r\n                        setTodos={setTodos}\r\n                        checkedList={false}\r\n                        mode={ThemeMode}\r\n                    />\r\n\r\n                    <TodoList\r\n                        title={'완료한 일'}\r\n                        todos={todos}\r\n                        setTodos={setTodos}\r\n                        checkedList={true}\r\n                        mode={ThemeMode}\r\n                    />\r\n\r\n                    <ThemeToggle toggle={toggleTheme} mode={ThemeMode}>\r\n                        DarkMode\r\n                    </ThemeToggle>\r\n                </article>\r\n                <TodoFooter>\r\n                    &copy; {new Date().getFullYear()} TodoList\r\n                </TodoFooter>\r\n            </div>\r\n        </TodoWrap>\r\n    )\r\n}\r\n\r\nexport default TodoTemplate\r\nconst TodoWrap = styled.div`\r\n    background: ${({ theme }) => theme.bgColor};\r\n    color: ${({ theme }) => theme.textColor};\r\n    min-height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 25px;\r\n    position: relative;\r\n`\r\nconst TodoFooter = styled.div`\r\n    font-size: 13px;\r\n    color: #888;\r\n    position: absolute;\r\n    bottom: 25px;\r\n    left: 50%;\r\n    margin-left: -50px;\r\n`\r\n","import React from 'react'\r\nimport TodoTemplate from 'components/TodoTemplate'\r\nimport ThemeProvider from 'theme/themeProvider'\r\n\r\nconst App = () => {\r\n    return (\r\n        <ThemeProvider>\r\n            <TodoTemplate />\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport 'index.css'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}